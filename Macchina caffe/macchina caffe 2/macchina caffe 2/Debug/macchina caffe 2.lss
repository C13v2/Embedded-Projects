
macchina caffe 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000402  00000496  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000402  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800102  00800102  00000498  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000871  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006cb  00000000  00000000  00000dd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047d  00000000  00000000  0000149c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  0000191c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043a  00000000  00000000  00001a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000219  00000000  00000000  00001e6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002083  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e0       	ldi	r30, 0x02	; 2
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 30       	cpi	r26, 0x0C	; 12
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 4c 01 	call	0x298	; 0x298 <main>
  9e:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_5>:
			break;
		}
	}
}

ISR(PCINT2_vect) {
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	2f 93       	push	r18
  b2:	3f 93       	push	r19
  b4:	4f 93       	push	r20
  b6:	5f 93       	push	r21
  b8:	6f 93       	push	r22
  ba:	7f 93       	push	r23
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
  c0:	af 93       	push	r26
  c2:	bf 93       	push	r27
  c4:	ef 93       	push	r30
	uint8_t change = oldvalue ^ PIND;
  c6:	49 b1       	in	r20, 0x09	; 9
  c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  cc:	48 27       	eor	r20, r24
	oldvalue = PIND;
  ce:	89 b1       	in	r24, 0x09	; 9
  d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
  d4:	82 e0       	ldi	r24, 0x02	; 2
  d6:	90 e0       	ldi	r25, 0x00	; 0
	bool hold = false;
  d8:	70 e0       	ldi	r23, 0x00	; 0
	for (uint8_t i = PIND2; i <= PIND7; i++) {
		if ((change & (1<<i)) && !(PIND & (1<<i))) {
  da:	50 e0       	ldi	r21, 0x00	; 0
			pulsantepremuto = (1<<i);
  dc:	a1 e0       	ldi	r26, 0x01	; 1
  de:	b0 e0       	ldi	r27, 0x00	; 0
			hold = true;
  e0:	e1 e0       	ldi	r30, 0x01	; 1
ISR(PCINT2_vect) {
	uint8_t change = oldvalue ^ PIND;
	oldvalue = PIND;
	bool hold = false;
	for (uint8_t i = PIND2; i <= PIND7; i++) {
		if ((change & (1<<i)) && !(PIND & (1<<i))) {
  e2:	9a 01       	movw	r18, r20
  e4:	08 2e       	mov	r0, r24
  e6:	02 c0       	rjmp	.+4      	; 0xec <__vector_5+0x46>
  e8:	35 95       	asr	r19
  ea:	27 95       	ror	r18
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <__vector_5+0x42>
  f0:	20 ff       	sbrs	r18, 0
  f2:	14 c0       	rjmp	.+40     	; 0x11c <__vector_5+0x76>
  f4:	29 b1       	in	r18, 0x09	; 9
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	08 2e       	mov	r0, r24
  fa:	02 c0       	rjmp	.+4      	; 0x100 <__vector_5+0x5a>
  fc:	35 95       	asr	r19
  fe:	27 95       	ror	r18
 100:	0a 94       	dec	r0
 102:	e2 f7       	brpl	.-8      	; 0xfc <__vector_5+0x56>
 104:	20 fd       	sbrc	r18, 0
 106:	0a c0       	rjmp	.+20     	; 0x11c <__vector_5+0x76>
			pulsantepremuto = (1<<i);
 108:	9d 01       	movw	r18, r26
 10a:	08 2e       	mov	r0, r24
 10c:	02 c0       	rjmp	.+4      	; 0x112 <__vector_5+0x6c>
 10e:	22 0f       	add	r18, r18
 110:	33 1f       	adc	r19, r19
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <__vector_5+0x68>
 116:	20 93 0b 01 	sts	0x010B, r18	; 0x80010b <pulsantepremuto>
			hold = true;
 11a:	7e 2f       	mov	r23, r30
 11c:	01 96       	adiw	r24, 0x01	; 1

ISR(PCINT2_vect) {
	uint8_t change = oldvalue ^ PIND;
	oldvalue = PIND;
	bool hold = false;
	for (uint8_t i = PIND2; i <= PIND7; i++) {
 11e:	88 30       	cpi	r24, 0x08	; 8
 120:	91 05       	cpc	r25, r1
 122:	f9 f6       	brne	.-66     	; 0xe2 <__vector_5+0x3c>
		if ((change & (1<<i)) && !(PIND & (1<<i))) {
			pulsantepremuto = (1<<i);
			hold = true;
		}
	}
	if (!hold) {
 124:	71 11       	cpse	r23, r1
 126:	02 c0       	rjmp	.+4      	; 0x12c <__vector_5+0x86>
		pulsantepremuto = 0;
 128:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <pulsantepremuto>
	}
}
 12c:	ef 91       	pop	r30
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	7f 91       	pop	r23
 138:	6f 91       	pop	r22
 13a:	5f 91       	pop	r21
 13c:	4f 91       	pop	r20
 13e:	3f 91       	pop	r19
 140:	2f 91       	pop	r18
 142:	0f 90       	pop	r0
 144:	0f be       	out	0x3f, r0	; 63
 146:	0f 90       	pop	r0
 148:	1f 90       	pop	r1
 14a:	18 95       	reti

0000014c <__vector_14>:

ISR(TIMER0_COMPA_vect) {
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	8f 93       	push	r24
 158:	9f 93       	push	r25
	tick++;
 15a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <tick>
 15e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <tick+0x1>
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <tick+0x1>
 168:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <tick>
}
 16c:	9f 91       	pop	r25
 16e:	8f 91       	pop	r24
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <__vector_11>:

ISR(TIMER1_COMPA_vect) {
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
	secondi++;
 188:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <secondi>
 18c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <secondi+0x1>
 190:	01 96       	adiw	r24, 0x01	; 1
 192:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <secondi+0x1>
 196:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <secondi>
}
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <__vector_7>:

ISR(TIMER2_COMPA_vect) {
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	8f 93       	push	r24
 1b4:	9f 93       	push	r25
	timer++;
 1b6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timer>
 1ba:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <timer+0x1>
 1be:	01 96       	adiw	r24, 0x01	; 1
 1c0:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timer+0x1>
 1c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timer>
}
 1c8:	9f 91       	pop	r25
 1ca:	8f 91       	pop	r24
 1cc:	0f 90       	pop	r0
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <lampeggio>:

void lampeggio() {
	int cycle = 67;
	int period = 200;
	if (tick <= cycle) {
 1d6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <tick>
 1da:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <tick+0x1>
 1de:	84 34       	cpi	r24, 0x44	; 68
 1e0:	91 05       	cpc	r25, r1
 1e2:	14 f4       	brge	.+4      	; 0x1e8 <lampeggio+0x12>
		PORTC |= l0;
 1e4:	40 9a       	sbi	0x08, 0	; 8
 1e6:	0c c0       	rjmp	.+24     	; 0x200 <lampeggio+0x2a>
		} else if (tick <= 2*cycle) {
 1e8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <tick>
 1ec:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <tick+0x1>
 1f0:	87 38       	cpi	r24, 0x87	; 135
 1f2:	91 05       	cpc	r25, r1
 1f4:	1c f4       	brge	.+6      	; 0x1fc <lampeggio+0x26>
		PORTC |= l1;
 1f6:	41 9a       	sbi	0x08, 1	; 8
		PORTC &=~ l0;
 1f8:	40 98       	cbi	0x08, 0	; 8
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <lampeggio+0x2a>
		} else {
		PORTC |= l2;
 1fc:	42 9a       	sbi	0x08, 2	; 8
		PORTC &=~ l1;
 1fe:	41 98       	cbi	0x08, 1	; 8
	}
	if (tick >= period) {
 200:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <tick>
 204:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <tick+0x1>
 208:	88 3c       	cpi	r24, 0xC8	; 200
 20a:	91 05       	cpc	r25, r1
 20c:	24 f0       	brlt	.+8      	; 0x216 <lampeggio+0x40>
		tick = 0;
 20e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <tick+0x1>
 212:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <tick>
 216:	08 95       	ret

00000218 <pressione>:
	}
}

void pressione() {
	if (timer <= 400) {
 218:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timer>
 21c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <timer+0x1>
 220:	81 39       	cpi	r24, 0x91	; 145
 222:	91 40       	sbci	r25, 0x01	; 1
 224:	3c f4       	brge	.+14     	; 0x234 <pressione+0x1c>
		stop = 4;
 226:	84 e0       	ldi	r24, 0x04	; 4
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 22e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 232:	08 95       	ret
		} else if (timer <= 600) {
 234:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timer>
 238:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <timer+0x1>
 23c:	89 35       	cpi	r24, 0x59	; 89
 23e:	92 40       	sbci	r25, 0x02	; 2
 240:	3c f4       	brge	.+14     	; 0x250 <pressione+0x38>
		stop = 6;
 242:	86 e0       	ldi	r24, 0x06	; 6
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 24a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 24e:	08 95       	ret
		} else if (timer >= 600) {
 250:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timer>
 254:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <timer+0x1>
 258:	88 35       	cpi	r24, 0x58	; 88
 25a:	92 40       	sbci	r25, 0x02	; 2
 25c:	1c f0       	brlt	.+6      	; 0x264 <pressione+0x4c>
		currentstate = reset;
 25e:	83 e0       	ldi	r24, 0x03	; 3
 260:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <currentstate>
 264:	08 95       	ret

00000266 <anomalia>:

void anomalia() {
	int cycle = 34;
	int period = 67;

	if (tick <= cycle) {
 266:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <tick>
 26a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <tick+0x1>
 26e:	83 97       	sbiw	r24, 0x23	; 35
 270:	24 f4       	brge	.+8      	; 0x27a <anomalia+0x14>
		PORTC |= (l3 | l4);
 272:	88 b1       	in	r24, 0x08	; 8
 274:	88 61       	ori	r24, 0x18	; 24
 276:	88 b9       	out	0x08, r24	; 8
 278:	03 c0       	rjmp	.+6      	; 0x280 <anomalia+0x1a>
		} else {
		PORTC &=~ (l3 | l4);
 27a:	88 b1       	in	r24, 0x08	; 8
 27c:	87 7e       	andi	r24, 0xE7	; 231
 27e:	88 b9       	out	0x08, r24	; 8
	}
	if (tick >= period) {
 280:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <tick>
 284:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <tick+0x1>
 288:	83 34       	cpi	r24, 0x43	; 67
 28a:	91 05       	cpc	r25, r1
 28c:	24 f0       	brlt	.+8      	; 0x296 <anomalia+0x30>
		tick = 0;
 28e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <tick+0x1>
 292:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <tick>
 296:	08 95       	ret

00000298 <main>:
void pressione();
void anomalia();

int main(void)
{
	DDRC |= (l0 | l1 | l2 | l3 | l4 | l5);
 298:	87 b1       	in	r24, 0x07	; 7
 29a:	8f 63       	ori	r24, 0x3F	; 63
 29c:	87 b9       	out	0x07, r24	; 7
	PORTC &=~ (l0 | l1 | l2 | l3 | l4 | l5);
 29e:	88 b1       	in	r24, 0x08	; 8
 2a0:	80 7c       	andi	r24, 0xC0	; 192
 2a2:	88 b9       	out	0x08, r24	; 8

	DDRD &=~ (b2 | b4 | b7);
 2a4:	8a b1       	in	r24, 0x0a	; 10
 2a6:	8b 76       	andi	r24, 0x6B	; 107
 2a8:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (b2 | b4 | b7);
 2aa:	8b b1       	in	r24, 0x0b	; 11
 2ac:	84 69       	ori	r24, 0x94	; 148
 2ae:	8b b9       	out	0x0b, r24	; 11

	PCICR |= (1<<PCIE2);
 2b0:	e8 e6       	ldi	r30, 0x68	; 104
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	84 60       	ori	r24, 0x04	; 4
 2b8:	80 83       	st	Z, r24
	PCMSK2 |= (b2 | b4 | b7);
 2ba:	ed e6       	ldi	r30, 0x6D	; 109
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	80 81       	ld	r24, Z
 2c0:	84 69       	ori	r24, 0x94	; 148
 2c2:	80 83       	st	Z, r24

	TCCR0A |= (1<<WGM01);
 2c4:	84 b5       	in	r24, 0x24	; 36
 2c6:	82 60       	ori	r24, 0x02	; 2
 2c8:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1<<OCIE0A);
 2ca:	ee e6       	ldi	r30, 0x6E	; 110
 2cc:	f0 e0       	ldi	r31, 0x00	; 0
 2ce:	80 81       	ld	r24, Z
 2d0:	82 60       	ori	r24, 0x02	; 2
 2d2:	80 83       	st	Z, r24
	OCR0A = 79; // 5ms
 2d4:	8f e4       	ldi	r24, 0x4F	; 79
 2d6:	87 bd       	out	0x27, r24	; 39

	TCCR1B |= (1<<WGM12);
 2d8:	e1 e8       	ldi	r30, 0x81	; 129
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	80 81       	ld	r24, Z
 2de:	88 60       	ori	r24, 0x08	; 8
 2e0:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A);
 2e2:	af e6       	ldi	r26, 0x6F	; 111
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	8c 91       	ld	r24, X
 2e8:	82 60       	ori	r24, 0x02	; 2
 2ea:	8c 93       	st	X, r24
	OCR1A = 15626; // 1s
 2ec:	8a e0       	ldi	r24, 0x0A	; 10
 2ee:	9d e3       	ldi	r25, 0x3D	; 61
 2f0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 2f4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>

	TCCR2A |= (1<<WGM21);
 2f8:	a0 eb       	ldi	r26, 0xB0	; 176
 2fa:	b0 e0       	ldi	r27, 0x00	; 0
 2fc:	8c 91       	ld	r24, X
 2fe:	82 60       	ori	r24, 0x02	; 2
 300:	8c 93       	st	X, r24
	TIMSK2 |= (1<<OCIE2A);
 302:	a0 e7       	ldi	r26, 0x70	; 112
 304:	b0 e0       	ldi	r27, 0x00	; 0
 306:	8c 91       	ld	r24, X
 308:	82 60       	ori	r24, 0x02	; 2
 30a:	8c 93       	st	X, r24
	OCR2A = 156; // 10ms
 30c:	8c e9       	ldi	r24, 0x9C	; 156
 30e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>

	sei();
 312:	78 94       	sei

	TCCR0B |= ((1 << CS00) | (1 << CS02));
 314:	85 b5       	in	r24, 0x25	; 37
 316:	85 60       	ori	r24, 0x05	; 5
 318:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= ((1 << CS10) | (1 << CS12));
 31a:	80 81       	ld	r24, Z
 31c:	85 60       	ori	r24, 0x05	; 5
 31e:	80 83       	st	Z, r24
	TCCR2B |= ((1 << CS21) | (1<< CS22) | (1<<CS20));
 320:	e1 eb       	ldi	r30, 0xB1	; 177
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	80 81       	ld	r24, Z
 326:	87 60       	ori	r24, 0x07	; 7
 328:	80 83       	st	Z, r24
				pulsantepremuto = 0;
				stop = 0;
				timer = 0;
			}
			if (pulsantepremuto == b4) {
				currentstate = ferma;
 32a:	02 e0       	ldi	r16, 0x02	; 2
				PORTC |= l5;
				pulsantepremuto = 0;
			}

			if (pulsantepremuto == b2) {
				currentstate = avvio;
 32c:	11 e0       	ldi	r17, 0x01	; 1
	           case ferma:
			   if (pulsantepremuto == b4)
			   {	
				if (secondi == 4) {
					anomalia();
					currentstate = reset;
 32e:	0f 2e       	mov	r0, r31
 330:	f3 e0       	ldi	r31, 0x03	; 3
 332:	ff 2e       	mov	r15, r31
 334:	f0 2d       	mov	r31, r0
			}
			break;

			case reset:
			TCCR0B &=~ ((1 << CS00) | (1 << CS02));
			TCCR1B &=~ ((1 << CS10) | (1 << CS12));
 336:	c1 e8       	ldi	r28, 0x81	; 129
 338:	d0 e0       	ldi	r29, 0x00	; 0
	TCCR1B |= ((1 << CS10) | (1 << CS12));
	TCCR2B |= ((1 << CS21) | (1<< CS22) | (1<<CS20));

	while (1)
	{
		switch (currentstate) {
 33a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <currentstate>
 33e:	81 30       	cpi	r24, 0x01	; 1
 340:	b1 f0       	breq	.+44     	; 0x36e <main+0xd6>
 342:	28 f0       	brcs	.+10     	; 0x34e <main+0xb6>
 344:	82 30       	cpi	r24, 0x02	; 2
 346:	61 f1       	breq	.+88     	; 0x3a0 <main+0x108>
 348:	83 30       	cpi	r24, 0x03	; 3
 34a:	d9 f1       	breq	.+118    	; 0x3c2 <main+0x12a>
 34c:	f8 cf       	rjmp	.-16     	; 0x33e <main+0xa6>
			case zucchero:
			if (pulsantepremuto == b7) {
 34e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <pulsantepremuto>
 352:	80 38       	cpi	r24, 0x80	; 128
 354:	19 f4       	brne	.+6      	; 0x35c <main+0xc4>
				PORTC |= l5;
 356:	45 9a       	sbi	0x08, 5	; 8
				pulsantepremuto = 0;
 358:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <pulsantepremuto>
			}

			if (pulsantepremuto == b2) {
 35c:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <pulsantepremuto>
 360:	84 30       	cpi	r24, 0x04	; 4
 362:	59 f7       	brne	.-42     	; 0x33a <main+0xa2>
				currentstate = avvio;
 364:	10 93 0a 01 	sts	0x010A, r17	; 0x80010a <currentstate>
				pulsantepremuto = 0;
 368:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <pulsantepremuto>
 36c:	e6 cf       	rjmp	.-52     	; 0x33a <main+0xa2>
			}
			break;

			case avvio:
			if (pulsantepremuto == b2) {
 36e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <pulsantepremuto>
 372:	84 30       	cpi	r24, 0x04	; 4
 374:	71 f4       	brne	.+28     	; 0x392 <main+0xfa>
				lampeggio();
 376:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lampeggio>
				pressione();
 37a:	0e 94 0c 01 	call	0x218	; 0x218 <pressione>
				pulsantepremuto = 0;
 37e:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <pulsantepremuto>
				stop = 0;
 382:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 386:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
				timer = 0;
 38a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <timer+0x1>
 38e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <timer>
			}
			if (pulsantepremuto == b4) {
 392:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <pulsantepremuto>
 396:	80 31       	cpi	r24, 0x10	; 16
 398:	81 f6       	brne	.-96     	; 0x33a <main+0xa2>
				currentstate = ferma;
 39a:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <currentstate>
 39e:	cd cf       	rjmp	.-102    	; 0x33a <main+0xa2>
			} break;
			
	           case ferma:
			   if (pulsantepremuto == b4)
 3a0:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <pulsantepremuto>
 3a4:	80 31       	cpi	r24, 0x10	; 16
 3a6:	49 f6       	brne	.-110    	; 0x33a <main+0xa2>
			   {	
				if (secondi == 4) {
 3a8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <secondi>
 3ac:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <secondi+0x1>
 3b0:	04 97       	sbiw	r24, 0x04	; 4
 3b2:	21 f4       	brne	.+8      	; 0x3bc <main+0x124>
					anomalia();
 3b4:	0e 94 33 01 	call	0x266	; 0x266 <anomalia>
					currentstate = reset;
 3b8:	f0 92 0a 01 	sts	0x010A, r15	; 0x80010a <currentstate>
				}
				pulsantepremuto = 0;
 3bc:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <pulsantepremuto>
 3c0:	bc cf       	rjmp	.-136    	; 0x33a <main+0xa2>
			}
			break;

			case reset:
			TCCR0B &=~ ((1 << CS00) | (1 << CS02));
 3c2:	85 b5       	in	r24, 0x25	; 37
 3c4:	8a 7f       	andi	r24, 0xFA	; 250
 3c6:	85 bd       	out	0x25, r24	; 37
			TCCR1B &=~ ((1 << CS10) | (1 << CS12));
 3c8:	88 81       	ld	r24, Y
 3ca:	8a 7f       	andi	r24, 0xFA	; 250
 3cc:	88 83       	st	Y, r24
			PORTC &=~ (l0 | l1 | l2 | l3 | l4 | l5);
 3ce:	88 b1       	in	r24, 0x08	; 8
 3d0:	80 7c       	andi	r24, 0xC0	; 192
 3d2:	88 b9       	out	0x08, r24	; 8
			pulsantepremuto = 0;
 3d4:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <pulsantepremuto>
			timer = 0;
 3d8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <timer+0x1>
 3dc:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <timer>
			stop = 0;
 3e0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 3e4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
			tick = 0;
 3e8:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <tick+0x1>
 3ec:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <tick>
			secondi = 0;
 3f0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <secondi+0x1>
 3f4:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <secondi>
			currentstate = zucchero;
 3f8:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <currentstate>
			break;
 3fc:	9e cf       	rjmp	.-196    	; 0x33a <main+0xa2>

000003fe <_exit>:
 3fe:	f8 94       	cli

00000400 <__stop_program>:
 400:	ff cf       	rjmp	.-2      	; 0x400 <__stop_program>
